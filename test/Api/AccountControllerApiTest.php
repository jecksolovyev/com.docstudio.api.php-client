<?php
/**
 * AccountControllerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DocStudio Api Documentation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R125.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace DocStudio\Client\Test\Api;

use \DocStudio\Client\Configuration;
use \DocStudio\Client\ApiException;
use \DocStudio\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AccountControllerApiTest Class Doc Comment
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AccountControllerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addNewCryptoConfigs
     *
     * Add crypto configs.
     *
     */
    public function testAddNewCryptoConfigs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for blockUsers
     *
     * Block/Unblock corporate users.
     *
     */
    public function testBlockUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAccount
     *
     * Create account and mailbox(es) under this account. User will be assigned with default system roles for this account and mailbox(es)..
     *
     */
    public function testCreateAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCorporateUser
     *
     * Create corporate user.
     *
     */
    public function testCreateCorporateUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createMassAccountUsers
     *
     * Mass create corporate users.
     *
     */
    public function testCreateMassAccountUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAccount
     *
     * Delete account.
     *
     */
    public function testDeleteAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCorporateUsers
     *
     * Delete corporate users.
     *
     */
    public function testDeleteCorporateUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCryptoConfigs
     *
     * Delete crypto configs.
     *
     */
    public function testDeleteCryptoConfigs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountBillingAddress
     *
     * Get account billing address.
     *
     */
    public function testGetAccountBillingAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountBrandLogo
     *
     * Retrieve account brand logo.
     *
     */
    public function testGetAccountBrandLogo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountDetails
     *
     * .
     *
     */
    public function testGetAccountDetails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountLogoAccount
     *
     * Retrieve account logo.
     *
     */
    public function testGetAccountLogoAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountUsersImportFileExample
     *
     * Get account users import file example.
     *
     */
    public function testGetAccountUsersImportFileExample()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCryptoConfigs
     *
     * Get crypto configs.
     *
     */
    public function testGetCryptoConfigs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMailbox
     *
     * Users and their permissions by mailbox.
     *
     */
    public function testGetMailbox()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUserPolicies
     *
     * Get user password/session policies.
     *
     */
    public function testGetUserPolicies()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUsersPermissions
     *
     * Get users with permissions per account and mailboxes.
     *
     */
    public function testGetUsersPermissions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for mailboxesReport
     *
     * Generate account mailboxes report.
     *
     */
    public function testMailboxesReport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resendCorporateUserWelcomeMessage
     *
     * Resend corporate user welcome message.
     *
     */
    public function testResendCorporateUserWelcomeMessage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for saveUserPolicies
     *
     * Save user password/session policies.
     *
     */
    public function testSaveUserPolicies()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchMailboxesAccount
     *
     * Get paged account mailboxes list.
     *
     */
    public function testSearchMailboxesAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAccountBillingAddress
     *
     * Create/update account billing address.
     *
     */
    public function testUpdateAccountBillingAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAccountDetails
     *
     * .
     *
     */
    public function testUpdateAccountDetails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersReport
     *
     * Generate account users report.
     *
     */
    public function testUsersReport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
