<?php
/**
 * IntegrationControllerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DocStudio Api Documentation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R125.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace DocStudio\Client\Test\Api;

use \DocStudio\Client\Configuration;
use \DocStudio\Client\ApiException;
use \DocStudio\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * IntegrationControllerApiTest Class Doc Comment
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class IntegrationControllerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for convertBinaryToXML
     *
     * Convert incoming file to XML view.
     *
     */
    public function testConvertBinaryToXML()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createIntegrationRule
     *
     * Create integration rule.
     *
     */
    public function testCreateIntegrationRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteIntegrationRule
     *
     * Delete integration rule.
     *
     */
    public function testDeleteIntegrationRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for execute
     *
     * Execute conversion map and generate file name (if pattern rule defined).
     *
     */
    public function testExecute()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generate
     *
     * Generate envelope XML by template.
     *
     */
    public function testGenerate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getExchangeCertificate
     *
     * Get public exchange certificate.
     *
     */
    public function testGetExchangeCertificate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIntegrationRule
     *
     * Get integration rule.
     *
     */
    public function testGetIntegrationRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIntegrationRules
     *
     * Get account integration rules.
     *
     */
    public function testGetIntegrationRules()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMailboxIntegration
     *
     * Get Mailbox integration.
     *
     */
    public function testGetMailboxIntegration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for newPassword
     *
     * Generate and save new password.
     *
     */
    public function testNewPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for saveMailboxIntegration
     *
     * Create/update Mailbox integration.
     *
     */
    public function testSaveMailboxIntegration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateIntegrationRule
     *
     * Update integration rule.
     *
     */
    public function testUpdateIntegrationRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
