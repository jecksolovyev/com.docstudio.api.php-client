<?php
/**
 * TemplateControllerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DocStudio Api Documentation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R125.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace DocStudio\Client\Test\Api;

use \DocStudio\Client\Configuration;
use \DocStudio\Client\ApiException;
use \DocStudio\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TemplateControllerApiTest Class Doc Comment
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TemplateControllerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addZipStructure
     *
     * Add new files structure for zip archive.
     *
     */
    public function testAddZipStructure()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for archiveTemplate
     *
     * Make template archived.
     *
     */
    public function testArchiveTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for callClone
     *
     * Clone template.
     *
     */
    public function testCallClone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for checkTemplateExistsByUuid
     *
     * Check template exists by UUID.
     *
     */
    public function testCheckTemplateExistsByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for create
     *
     * Create new template.
     *
     */
    public function testCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteShareCode
     *
     * Delete share code for template.
     *
     */
    public function testDeleteShareCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteZipStructure
     *
     * Delete structure for zip archive.
     *
     */
    public function testDeleteZipStructure()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadTemplateImage
     *
     * Download template image.
     *
     */
    public function testDownloadTemplateImage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadTemplatePdf
     *
     * Download template PDF.
     *
     */
    public function testDownloadTemplatePdf()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPdfPageSizes
     *
     * Get PDF page sizes.
     *
     */
    public function testGetPdfPageSizes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRecentlyUsedTemplates
     *
     * Get up to 10 recently used templates.
     *
     */
    public function testGetRecentlyUsedTemplates()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRecommendedTemplates
     *
     * Get up to 4 recommended templates.
     *
     */
    public function testGetRecommendedTemplates()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSavedZipStructureNames
     *
     * Get saved structure titles for zip archive.
     *
     */
    public function testGetSavedZipStructureNames()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getShareCode
     *
     * Retrieve share code for template.
     *
     */
    public function testGetShareCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTemplateByShareCode
     *
     * Retrieve template by share code.
     *
     */
    public function testGetTemplateByShareCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTemplateByUuid
     *
     * Retrieve template by UUID.
     *
     */
    public function testGetTemplateByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTemplateVersionsByUuid
     *
     * Retrieve template versions by UUID.
     *
     */
    public function testGetTemplateVersionsByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getZipStructure
     *
     * Get structure with all files for zip archive.
     *
     */
    public function testGetZipStructure()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchTemplates
     *
     * Get paged templates list.
     *
     */
    public function testSearchTemplates()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for update
     *
     * Update template in DB. Category in template could be null..
     *
     */
    public function testUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCategories
     *
     * Update categories in template..
     *
     */
    public function testUpdateCategories()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateName
     *
     * Update name in template..
     *
     */
    public function testUpdateName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadImage
     *
     * Upload new image.
     *
     */
    public function testUploadImage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadPdf
     *
     * Upload new PDF.
     *
     */
    public function testUploadPdf()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for validateTemplate
     *
     * Validate template by UUID or version.
     *
     */
    public function testValidateTemplate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
