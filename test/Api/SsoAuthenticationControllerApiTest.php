<?php
/**
 * SsoAuthenticationControllerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DocStudio Api Documentation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R125.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace DocStudio\Client\Test\Api;

use \DocStudio\Client\Configuration;
use \DocStudio\Client\ApiException;
use \DocStudio\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SsoAuthenticationControllerApiTest Class Doc Comment
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SsoAuthenticationControllerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for loginOauth2
     *
     * Login with oAuth2.
     *
     */
    public function testLoginOauth2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loginSaml2
     *
     * Login with SAML2.
     *
     */
    public function testLoginSaml2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for samlMetadata
     *
     * Returns SAML Metadata.
     *
     */
    public function testSamlMetadata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for samlRegistrationIdByDomain
     *
     * Returns EntityID by domain.
     *
     */
    public function testSamlRegistrationIdByDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
