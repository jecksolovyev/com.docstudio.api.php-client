<?php
/**
 * EnvelopeControllerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DocStudio Api Documentation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R125.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace DocStudio\Client\Test\Api;

use \DocStudio\Client\Configuration;
use \DocStudio\Client\ApiException;
use \DocStudio\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * EnvelopeControllerApiTest Class Doc Comment
 *
 * @category Class
 * @package  DocStudio\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EnvelopeControllerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for acceptUserPendingInvitations
     *
     * Accept user's pending invitations.
     *
     */
    public function testAcceptUserPendingInvitations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addEnvelopesIntoChain
     *
     * Add envelopes into chain.
     *
     */
    public function testAddEnvelopesIntoChain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for approve
     *
     * Approve envelope.
     *
     */
    public function testApprove()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for archive
     *
     * Archive envelopes.
     *
     */
    public function testArchive()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelApprovalFlow
     *
     * Cancel envelope approval.
     *
     */
    public function testCancelApprovalFlow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelEnvelopeDelegation
     *
     * Cancel envelope delegation.
     *
     */
    public function testCancelEnvelopeDelegation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelEnvelopes
     *
     * Cancel envelopes.
     *
     */
    public function testCancelEnvelopes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for check
     *
     * Check an envelope.
     *
     */
    public function testCheck()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for checkEnvelopeHasActiveRole
     *
     * Check envelope has active role.
     *
     */
    public function testCheckEnvelopeHasActiveRole()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for checkUserHasInvitations
     *
     * Check user has pending invitations.
     *
     */
    public function testCheckUserHasInvitations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cloneAttachment
     *
     * Clone an existing attachment.
     *
     */
    public function testCloneAttachment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for confirmInvite
     *
     * Accept/confirm invitations.
     *
     */
    public function testConfirmInvite()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for continueScenarioStep
     *
     * Continue scenario flow with step.
     *
     */
    public function testContinueScenarioStep()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for create
     *
     * Create draft envelope.
     *
     */
    public function testCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAttachment
     *
     * Create/upload new attachment.
     *
     */
    public function testCreateAttachment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createEnvelopeComment
     *
     * Create envelope comment thread.
     *
     */
    public function testCreateEnvelopeComment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPdfAttachment
     *
     * Create/upload new PDF attachment.
     *
     */
    public function testCreatePdfAttachment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for delegateEnvelopes
     *
     * Delegate envelopes.
     *
     */
    public function testDelegateEnvelopes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDrafts
     *
     * Delete draft envelopes.
     *
     */
    public function testDeleteDrafts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEnvelopeComment
     *
     * Delete envelope comment in thread or the whole thread.
     *
     */
    public function testDeleteEnvelopeComment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadEnvelopeAttachment
     *
     * Download attachment with specific type or raw.
     *
     */
    public function testDownloadEnvelopeAttachment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadFinalPdf
     *
     * Download final PDF.
     *
     */
    public function testDownloadFinalPdf()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadSharedAttachment
     *
     * Download shared attachment for specific provider.
     *
     */
    public function testDownloadSharedAttachment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for envelopeApproval
     *
     * Approve or Reject envelopes.
     *
     */
    public function testEnvelopeApproval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for envelopeApprovalHistory
     *
     * Get approval history.
     *
     */
    public function testEnvelopeApprovalHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fill
     *
     * Fill envelope.
     *
     */
    public function testFill()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateStamp
     *
     * Generate stamp by certificate.
     *
     */
    public function testGenerateStamp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getActiveRoles
     *
     * Get active roles by Envelope UUID.
     *
     */
    public function testGetActiveRoles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApprovalFlow
     *
     * Get envelope approval.
     *
     */
    public function testGetApprovalFlow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAttachmentPageSizes
     *
     * Get attachment page sizes.
     *
     */
    public function testGetAttachmentPageSizes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getChainEnvelopes
     *
     * Get chain envelopes list.
     *
     */
    public function testGetChainEnvelopes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDocumentFileForSign
     *
     * Get BINARY or XML for signing.
     *
     */
    public function testGetDocumentFileForSign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDocumentForSign
     *
     * BINARY and XML for signing.
     *
     */
    public function testGetDocumentForSign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDocumentPrintVersion
     *
     * Get document PDF for printing.
     *
     */
    public function testGetDocumentPrintVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDocumentsForSign
     *
     * BINARYs and XMLs for signing.
     *
     */
    public function testGetDocumentsForSign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvelopeByUuid
     *
     * Retrieve envelope by UUID.
     *
     */
    public function testGetEnvelopeByUuid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvelopeComments
     *
     * Get envelope comments for each document.
     *
     */
    public function testGetEnvelopeComments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvelopeInviteAuthorized
     *
     * Get information about envelope by the invitation code (by already registered user).
     *
     */
    public function testGetEnvelopeInviteAuthorized()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvelopeInviteUnauthorized
     *
     * Get information about envelope by the invitation code (by unauthenticated user).
     *
     */
    public function testGetEnvelopeInviteUnauthorized()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvelopeSharedZip
     *
     * Get shared zip archive.
     *
     */
    public function testGetEnvelopeSharedZip()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvelopeZip
     *
     * Get envelope or document zip archive.
     *
     */
    public function testGetEnvelopeZip()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMassSigningReport
     *
     * Get mass signing report.
     *
     */
    public function testGetMassSigningReport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUserPendingInvitations
     *
     * Get user's pending invitations.
     *
     */
    public function testGetUserPendingInvitations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for mergeEnvelopesIntoChain
     *
     * Merge envelopes into chain.
     *
     */
    public function testMergeEnvelopesIntoChain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oneTimeSend
     *
     * The envelope will be sent just once (template will be marked as deleted).
     *
     */
    public function testOneTimeSend()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for quickSendExternalDocuments
     *
     * Quick send envelope with external documents only.
     *
     */
    public function testQuickSendExternalDocuments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for recycleBin
     *
     * Archive envelopes.
     *
     */
    public function testRecycleBin()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeEnvelopeFromChain
     *
     * Remove envelope from chain.
     *
     */
    public function testRemoveEnvelopeFromChain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resendNotifications
     *
     * Resend notifications for active roles.
     *
     */
    public function testResendNotifications()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resolvedEnvelopeComment
     *
     * Set Resolved Flag for comment thread.
     *
     */
    public function testResolvedEnvelopeComment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revokeEnvelopeSharing
     *
     * Revoke sharing an envelope copy.
     *
     */
    public function testRevokeEnvelopeSharing()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for send
     *
     * Send envelope.
     *
     */
    public function testSend()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendByTemplateCode
     *
     * Send envelope by template code.
     *
     */
    public function testSendByTemplateCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendForApproval
     *
     * Send envelope for approval.
     *
     */
    public function testSendForApproval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for shareEnvelopesByEmail
     *
     * Share envelopes by email.
     *
     */
    public function testShareEnvelopesByEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for shareEnvelopesCopy
     *
     * Share envelopes copies.
     *
     */
    public function testShareEnvelopesCopy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sign
     *
     * Sign envelope documents.
     *
     */
    public function testSign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signSES
     *
     * Sign envelope with SES.
     *
     */
    public function testSignSES()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEnvelope
     *
     * Update draft envelope.
     *
     */
    public function testUpdateEnvelope()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEnvelopeComment
     *
     * Add/Update envelope comment in thread.
     *
     */
    public function testUpdateEnvelopeComment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEnvelopeCommentAccess
     *
     * Update envelope comment thread access level.
     *
     */
    public function testUpdateEnvelopeCommentAccess()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
